@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <div class="row">
                    <div class="col-md-3">
                        <label>Customer</label><br />
                        <input type="text" class="form-control txtFilterCustomer" />
                    </div>
                    <div class="col-md-3">
                        <label>Reference number</label><br />
                        <input type="text" class="form-control txtFilterReferenceNumber" />
                    </div>

                    <div class="col-md-6">
                        <br />
                        <button type="button" class="btn btn-primary btnSearch " style="float:left;">
                            <i class="fa fa-search"></i> SEARCH
                        </button>
                        <button type="button" class="btn btn-success btnNew" style="float:right;">
                            <i class="fa fa-plus"></i> NEW
                        </button>

                    </div>
                </div>
            </div>
            <div class="card-body">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>SN</th>
                            <th>Customer</th>
                            <th>Ref No</th>
                            <th>Transaction Date</th>
                            <th>Narration</th>
                            <th>Item Count</th>
                            <th>Total (Rs.)</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody class="CustomerTableData">
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">User Group Setup Page</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">

                <table class="table table-bordered" id="salesDetailsTable">
                    <thead>
                        <tr>
                            <th>Item Name</th>
                            <th>Quantity</th>
                            <th>Rate</th>
                            <th>Total</th>
                            <th>Unit Name</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Data will be dynamically populated here -->
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


@section Scripts {

    <script>
        $(document).ready(function () {
            loadData();
        });
        $(document).on('click', '.btnNew', function () {
            window.location.href = '@Url.Action("Create", "Sales")'
        });

        function loadData() {
            var Customer = $('.txtFilterCustomer').val() || '';
            var referenceNumber = $('.txtFilterReferenceNumber').val() || '';


            $.ajax({
                contentType: "application/json; charset=utf-8",
                method: 'get',
                url: '@Url.Action("GetData", "Sales")?Customer=' + Customer + '&referenceNumber=' + referenceNumber,
                success: function (dta) {
                    debugger;
                    var res = JSON.parse(dta.message)
                    var xyz = '';
                    $.each(res, function (i, x) {
                        xyz += '<tr>';
                        xyz += '<td>' + (i + 1) + '</td>';
                        xyz += '<td>' + x.CustomerName + '</td>';
                        xyz += '<td>' + x.ReferenceNo + '</td>';
                        xyz += '<td>' + x.TransactionDate + '</td>';
                        xyz += '<td>' + x.Narration + '</td>';
                        debugger;
                        xyz += '<td><label class="show-item" data-key="' + x.SalesMasterID + '">' + x.CNT + '</label></td>';
                        xyz += '<td>' + x.Total + '</td>';
                        xyz += '<td><button type="button" class="btn btn-secondary btn-sm btnPrint" data-key="' +x.SalesMasterID + '"><i class="fa fa-print"></i> Print</button>';
                        xyz += '<button type="button" class="btn btn-danger btn-sm ml-2 btnDelete" data-key="' + x.SalesMasterID+ '"> <i class="fa fa-trash"></i> DELETE</button ></td > ';
                        xyz += '</tr>';
                    });


                    $('.CustomerTableData').html(xyz);
                },
                error: function (e) {
                    console.log(e);
                },
                beforeSend: function () {
                    $.blockUI();
                },
                complete: function () {
                    $.unblockUI();
                }
            });
        }

        $(document).on('click', '.btnDelete', function () {
            var btn = $(this);
            var id = $(btn).data('key'); // Ensure id is retrieved before the confirm dialog
            $.confirm({
                title: 'Confirm!',
                type: 'red',
                content: 'Are you sure to delete?',
                buttons: {
                    confirm: () => {
                        if (id && id != 0) { // Add a condition to check if the id is valid
                            deleteData(id);
                        } else {
                            console.error('Invalid ID:', id); // Debugging log
                        }
                    },
                    cancel: function () {

                    },
                }
            });
        });


        function deleteData(id) {
            $.ajax({
                contentType: "application/json; charset=utf-8",
                method: 'get',
                url: '@Url.Action("DeleteData", "Sales")?id=' + id,
                success: function (res) {
                    debugger;
                    if (res.success) {
                        toastr["success"](res.message, "!!!")
                        loadData();

                    } else {
                        toastr("!!!", res.message, "error");
                    }
                },
                error: function (e) {
                    console.log(e);
                },
                beforeSend: function () {
                    $.blockUI();
                },
                complete: function () {
                    $.unblockUI();
                }
            });
        }

        $(document).on('click', '.btnSearch', function () {
            loadData();
        });
        $(document).on('click', '.show-item', function () {
            var id = $(this).data('key');
            alert(id); // You can remove this if not needed

            $.ajax({
                url: '/Sales/GetSalesDetails',  // Adjust your URL if necessary
                type: 'GET',
                data: { SalesMasterID: id }, // Sending the ID to the server
                success: function (data) {
                    debugger;
                    // Parse the message property as JSON to convert it to an array of objects
                    //var purchaseDetails = JSON.parse(data.message);
                    var salesDetails = data.message;


                    debugger;
                    //$('#purchaseDetailsTable tbody').empty();

                    // Loop through each item in the purchase details array
                    $.each(salesDetails, function (index, item) {
                        var row = `<tr>
                    <td>${item.itemName}</td>
                    <td>${item.quantity}</td>
                    <td>${item.rate}</td>
                    <td>${item.total}</td>
                    <td>${item.unitName}</td>
                </tr>`;
                        $('#salesDetailsTable tbody').append(row);
                    });

                    // Show the modal after appending the rows
                    $("#exampleModal").modal('show');
                },
                error: function (error) {
                    console.log("Error fetching data", error);
                }
            });
        });

    </script>


}